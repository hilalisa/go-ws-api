syntax = "proto3";

package pb;

import "google/api/annotations.proto";
//import "google/protobuf/empty.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
      title: "A Bit of Everything";
      version: "1.0";
      contact: {
        name: "gRPC-Gateway project";
        url: "https://github.com/grpc-ecosystem/grpc-gateway";
        email: "none@example.com";
      };
    };
    schemes: HTTP;
    schemes: HTTPS;
    schemes: WSS;
    consumes: "application/json";
    consumes: "application/x-foo-mime";
    produces: "application/json";
    produces: "application/x-foo-mime";
  };

service DeviceService {
    // List all registered devices
    rpc GetAllDevices(Empty) returns (Devices) {
        option (google.api.http) = {
            get: "/api/v1/devices"
          };
    };
    // Get a device by ID
    rpc GetDeviceByID(ID) returns (Device) {
        option (google.api.http).get = "/api/v1/devices/{id}";
    };
    // Update a device's state
    rpc SwitchDevice(UpdateDevice) returns (Device) {
        option (google.api.http) = {
            post: "/api/v1/devices/{id}/{value}"
            body: "*"
        };
    };
    // Register a new device
    rpc RegisterDevice(Device) returns (Device) {
        option (google.api.http) = {
            post: "/api/v1/devices"
            body: "*"
        };
    };
};

message ID {
    int32 id = 1;
};

message UpdateDevice {
    int32 id = 1;
    int32 value = 2;
};

message Device {
    int32 id = 1;
    string hardware = 2;
    string name = 3;
    string location = 4;
    enum DeviceType {
        unknown = 0;
        onOff = 1;
        dimmer = 2;
        sensor = 3;
    }
    DeviceType type = 5;
    string unit = 6;
    int32 state = 7;
};

message Devices {
    repeated Device device = 1;
};

message Empty {
};
